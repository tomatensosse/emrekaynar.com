generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(uuid())
  username     String   @unique
  password     String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  autoRedirect String?

  personalizedMessages PersonalizedMessage[]
}

model Track {
  id                String              @id @default(uuid())
  title             String
  duration          Int                 // Duration in seconds
  snippetDuration   Int                 @default(20) // Duration of snippet in seconds
  trackNumber       Int?                // Track number within an album
  audioFile         String              // URL to full audio file
  snippetFile       String              // URL to snippet audio file
  description       String?             // General track information
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  
  // Relations
  albumId           String?
  album             Album?              @relation(fields: [albumId], references: [id])
  singleId          String?
  single            Single?             @relation(fields: [singleId], references: [id])
  personalizedMessages PersonalizedMessage[]
}

model Album {
  id                String              @id @default(uuid())
  title             String
  artist            String
  releaseDate       DateTime?
  coverImage        String?             // URL to cover image
  description       String?
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  
  // Relations
  tracks            Track[]
}

model Single {
  id                String              @id @default(uuid())
  title             String
  artist            String
  releaseDate       DateTime?
  coverImage        String?             // URL to cover image
  description       String?
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  
  // Relations
  tracks            Track[]             // Can include remixes or alternate versions
}

model PersonalizedMessage {
  id                String              @id @default(uuid())
  userId            String
  trackId           String
  message           String              // Personalized message for this user on this track
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  user              User                @relation(fields: [userId], references: [id], onDelete: Cascade)
  track             Track               @relation(fields: [trackId], references: [id], onDelete: Cascade)

  @@unique([userId, trackId]) // A user can only have one personalized message per track
}
